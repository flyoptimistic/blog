<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>数据库事务，隔离级别，脏读，不可重复读，幻读</title>
    <url>/blog/2020/06/10/%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BA%8B%E5%8A%A1%EF%BC%8C%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB%EF%BC%8C%E8%84%8F%E8%AF%BB%EF%BC%8C%E4%B8%8D%E5%8F%AF%E9%87%8D%E5%A4%8D%E8%AF%BB%EF%BC%8C%E5%B9%BB%E8%AF%BB/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="数据库事务特征：ACID"><a href="#数据库事务特征：ACID" class="headerlink" title="数据库事务特征：ACID"></a>数据库事务特征：ACID</h3><h5 id="原子性（Atomicity）"><a href="#原子性（Atomicity）" class="headerlink" title="原子性（Atomicity）:"></a>原子性（Atomicity）:</h5><p>一个事务（transaction）中的所有操作，或者全部完成，或者全部不完成，不会结束在中间某个环节.</p>
<h5 id="一致性（Consistent）"><a href="#一致性（Consistent）" class="headerlink" title="一致性（Consistent）:"></a>一致性（Consistent）:</h5><p>在事务开始之前和完成之后，数据都必须保持一致状态，必须保证数据库的完整性。也就是说，数据必须符合数据库的规则。</p>
<h5 id="隔离性（Isolation）："><a href="#隔离性（Isolation）：" class="headerlink" title="隔离性（Isolation）："></a>隔离性（Isolation）：</h5><p>数据库允许多个并发事务同时对数据进行操作，隔离性保证各个事务相互独立，事务处理时的中间状态对其它事务是不可见的，以此防止出现数据不一致状态。可通过事务隔离级别设置：包括读未提交（Read uncommitted）、读提交（read committed）、可重复读（repeatable read）和串行化（Serializable）</p>
<h5 id="持久性（Durability）："><a href="#持久性（Durability）：" class="headerlink" title="持久性（Durability）："></a>持久性（Durability）：</h5><p>事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。</p>
<h3 id="MySQL-数据隔离级别"><a href="#MySQL-数据隔离级别" class="headerlink" title="MySQL 数据隔离级别:"></a>MySQL 数据隔离级别:</h3><ol>
<li><h5 id="Read-uncommittied-读未提交数据"><a href="#Read-uncommittied-读未提交数据" class="headerlink" title="Read uncommittied(读未提交数据)"></a>Read uncommittied(读未提交数据)</h5></li>
<li><h5 id="Read-committied-读已提交数据"><a href="#Read-committied-读已提交数据" class="headerlink" title="Read committied(读已提交数据)"></a>Read committied(读已提交数据)</h5></li>
<li><h5 id="Repea-read-可重复读"><a href="#Repea-read-可重复读" class="headerlink" title="Repea read(可重复读)"></a>Repea read(可重复读)</h5></li>
<li><h5 id="Serializable-可序列化"><a href="#Serializable-可序列化" class="headerlink" title="Serializable(可序列化)"></a>Serializable(可序列化)</h5></li>
</ol>
<p>在 InnoDB 中，默认为 Repeatable （可重复的）级别，InnoDB 中使用一种被称为 next-key locking 的策略来避免phantom（幻读）现象的产生。</p>
<p>使用 <code>select @@tx_isolation;</code> 可以查看 MySQL 默认的事务隔离级别。</p>
<p>不同的事务隔离级别会导致不同的问题：</p>
<table>
<thead>
<tr>
<th>隔离级别</th>
<th>脏读</th>
<th>不可重复读</th>
<th>幻读</th>
</tr>
</thead>
<tbody><tr>
<td>Read uncommittied(读未提交数据)</td>
<td>√</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>Read committied(读已提交数据)</td>
<td>×</td>
<td>√</td>
<td>√</td>
</tr>
<tr>
<td>Repea read(可重复读)</td>
<td>×</td>
<td>×</td>
<td>√</td>
</tr>
<tr>
<td>Serializable(可序列化)</td>
<td>×</td>
<td>×</td>
<td>×</td>
</tr>
</tbody></table>
<h3 id="事务七种传播行为："><a href="#事务七种传播行为：" class="headerlink" title="事务七种传播行为："></a>事务七种传播行为：</h3><table>
<thead>
<tr>
<th><strong>事务传播行为类型</strong></th>
<th><strong>说明</strong></th>
</tr>
</thead>
<tbody><tr>
<td>PROPAGATION_REQUIRED</td>
<td>如果当前没有事务，就创建一个新事务，如果当前存在事务，就加入该事务。这是最常见的选择。</td>
</tr>
<tr>
<td>PROPAGATION_SUPPORTS</td>
<td>支持当前事务，如果当前没有事务，就以非事务方式执行。</td>
</tr>
<tr>
<td>PROPAGATION_MANDATORY</td>
<td>使用当前的事务，如果当前没有事务，就抛出异常。</td>
</tr>
<tr>
<td>PROPAGATION_REQUIRED_NEW</td>
<td>新建事务，如果当前存在事务，就把当前事务挂起。</td>
</tr>
<tr>
<td>PROPAGATION_NOT_SUPPORTED</td>
<td>以非事务方式执行操作，如果当前存在事务，就把当前事务挂起。</td>
</tr>
<tr>
<td>PROPAGATION_NEVER</td>
<td>以非事务方式执行操作，如果当前存在事务，则抛出异常。</td>
</tr>
<tr>
<td>PROPAGATION_NESTED</td>
<td>如果当前存在事务，则在嵌套事务内执行。如果当前没有事务，则执行与PROPAGATION_REQUIRED类似的操作。</td>
</tr>
</tbody></table>
<h3 id="脏读、幻读、不可重复读的概念"><a href="#脏读、幻读、不可重复读的概念" class="headerlink" title="脏读、幻读、不可重复读的概念"></a>脏读、幻读、不可重复读的概念</h3><h4 id="脏读：脏读是指一个事务中访问到了另外一个事务未提交的数据"><a href="#脏读：脏读是指一个事务中访问到了另外一个事务未提交的数据" class="headerlink" title="脏读：脏读是指一个事务中访问到了另外一个事务未提交的数据"></a>脏读：脏读是指一个事务中访问到了另外一个事务未提交的数据</h4><p>所谓脏读是指一个事务中访问到了另外一个事务未提交的数据，如下图：</p>
<table>
<thead>
<tr>
<th align="center">事务A</th>
<th align="center">事务B</th>
</tr>
</thead>
<tbody><tr>
<td align="center">账户5000</td>
<td align="center">账户5000</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">小明老婆花了3000</td>
</tr>
<tr>
<td align="center">小明查看账户2000（产生脏读）</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">取款操作发生未知错误，事务B回滚，账户还是5000（rollback）</td>
</tr>
<tr>
<td align="center">commit</td>
<td align="center">commit</td>
</tr>
</tbody></table>
<p>事务B更新账户为2000，但是在事务B commit之前，事务A查看账户时是事务B还未提交的数据，此时事务B出现错误执行rollback，而事务A拿到的还是2000，这就是脏读。</p>
<h4 id="不可重复读：同一个事务中重复读取时获得的数据不同"><a href="#不可重复读：同一个事务中重复读取时获得的数据不同" class="headerlink" title="不可重复读：同一个事务中重复读取时获得的数据不同"></a>不可重复读：同一个事务中重复读取时获得的数据不同</h4><table>
<thead>
<tr>
<th align="center">事务A</th>
<th align="center">事务B</th>
</tr>
</thead>
<tbody><tr>
<td align="center">账户5000</td>
<td align="center">账户5000</td>
</tr>
<tr>
<td align="center">小明查看账户5000</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">小明老婆花了3000（修改该账户）</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">commit</td>
</tr>
<tr>
<td align="center">小明查看账户2000</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">commit</td>
<td align="center"></td>
</tr>
</tbody></table>
<p>在事务A中事务B修改了该账户，所以两次得到的值不同。</p>
<h4 id="幻读：幻读是不可重复读的特殊场景，但是事务二的数据操作仅仅是插入和删除，不是修改数据，读取的记录数量前后不一致"><a href="#幻读：幻读是不可重复读的特殊场景，但是事务二的数据操作仅仅是插入和删除，不是修改数据，读取的记录数量前后不一致" class="headerlink" title="幻读：幻读是不可重复读的特殊场景，但是事务二的数据操作仅仅是插入和删除，不是修改数据，读取的记录数量前后不一致"></a>幻读：幻读是不可重复读的特殊场景，但是事务二的数据操作仅仅是插入和删除，不是修改数据，读取的记录数量前后不一致</h4><table>
<thead>
<tr>
<th align="center">事务A</th>
<th align="center">事务B</th>
</tr>
</thead>
<tbody><tr>
<td align="center">查询id&gt;100的用户（只有102）</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">插入id=101的用户（John）</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">commit</td>
</tr>
<tr>
<td align="center">插入id=1的用户（主键冲突，幻读）</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">commit</td>
<td align="center"></td>
</tr>
</tbody></table>
<h4 id="幻读和不可重复读的区别："><a href="#幻读和不可重复读的区别：" class="headerlink" title="幻读和不可重复读的区别："></a>幻读和不可重复读的区别：</h4><p>由于很多人(当然也包括本人), 容易搞混 <code>不可重复读</code> 和 <code>幻读</code>, 这两者确实非常相似。</p>
<ul>
<li><p>但 <code>不可重复读</code> 主要是说多次读取一条记录, 发现该记录中某些列值被==修改==过。</p>
</li>
<li><p>而 <code>幻读</code> 主要是说多次读取<strong>一个范围内的记录</strong>(包括直接查询所有记录结果或者做聚合统计), 发现结果不一致(标准档案一般指<strong>记录增多</strong>, <strong>记录的减少</strong>应该也算是幻读)。(可以参考<a href="https://dev.mysql.com/doc/refman/5.7/en/innodb-next-key-locking.html" target="_blank" rel="noopener">MySQL官方文档对 Phantom Rows 的介绍</a>)</p>
<pre><code>其实对于 `幻读`, MySQL的InnoDB引擎默认的`RR`级别已经通过`MVCC自动帮我们解决了`, 所以该级别下, 你也模拟不出幻读的场景; 退回到 `RC` 隔离级别的话, 你又容易把`幻读`和`不可重复读`搞混淆, 所以这可能就是比较头痛的点吧!</code></pre><p>  具体可以参考《高性能MySQL》对 <code>RR</code> 隔离级别的描述, 理论上RR级别是无法解决幻读的问题, 但是由于InnoDB引擎的RR级别还使用了MVCC（多版本并发控制）, 所以也就避免了幻读的出现!</p>
</li>
</ul>
<p>总结：</p>
<p>（1）不可重复读是读取了其他事务更改的数据，针对update操作</p>
<p>解决：使用行级锁，锁定该行，事务A多次读取操作完成后才释放该锁，这个时候才允许其他事务更改刚才的数据。</p>
<p>（2）幻读是读取了其他事务新增的数据，针对insert与delete操作</p>
<p>解决：使用表级锁，锁定整张表，事务A多次读取数据总量之后才释放该锁，这个时候才允许其他事务新增数据。</p>
<h3 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h3><p>解决方案也就是上文提到的四种隔离级别，他们可以最大程度避免以上三种情况的发生：</p>
<ul>
<li><p>读未提交（Read Uncommitted）：允许脏读取，但不允许更新丢失。如果一个事务已经开始写数据，则另外一个事务则不允许同时进行写操作，但允许其他事务读此行数据。该隔离级别可以通过“排他锁”（写锁）实现。</p>
</li>
<li><p>读提交（Read Committed）：允许不可重复读取，但不允许脏读取。这可以通过“共享锁”（读锁）和“排他锁”（写锁）实现。读取数据的事务允许其他事务继续访问该行数据，但是未提交的写事务将会禁止其他事务访问该行。</p>
</li>
<li><p>可重复读取（Repeatable Read）：禁止不可重复读取和脏读取，但是有时可能出现幻读数据。这可以通过“共享锁”（读锁）和“排他锁”（写锁）实现。读取数据的事务将会禁止写事务（但允许读事务），写事务则禁止任何其他事务。</p>
</li>
<li><p>序列化（Serializable）：提供严格的事务隔离。它要求事务序列化执行，事务只能一个接着一个地执行，不能并发执行。仅仅通过“行级锁”是无法实现事务序列化的，必须通过其他机制保证新插入的数据不会被刚执行查询操作的事务访问到。</p>
<pre><code>隔离级别越高，越能保证数据的完整性和一致性，但是对并发性能的影响也越大。对于多数应用程序，可以优先考虑把数据库系统的隔离级别设为Read Committed。它能够避免脏读取，而且具有较好的并发性能。尽管它会导致不可重复读、幻读和第二类丢失更新这些并发问题，在可能出现这类问题的个别场合，可以由应用程序采用悲观锁或乐观锁来控制。</code></pre></li>
</ul>
<h4 id="扩展："><a href="#扩展：" class="headerlink" title="扩展："></a>扩展：</h4><p><strong>第一类丢失更新</strong>(回滚丢失，Lost update) ： A事务撤销时，把已经提交的B事务的更新数据覆盖了。</p>
<table>
<thead>
<tr>
<th align="center">事务A</th>
<th align="center">事务B</th>
</tr>
</thead>
<tbody><tr>
<td align="center">查询账户余额1000</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">查询并汇入1000元，余额改为2000元</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">commit</td>
</tr>
<tr>
<td align="center">取出1000元，把余额改为0元</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">撤销事务</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">余额1000（丢失更新）</td>
<td align="center"></td>
</tr>
</tbody></table>
<h5 id="第二类丢失更新-覆盖丢失-两次更新问题，Second-lost-update-：-A事务覆盖B事务已经提交的数据，造成B事务所做操作丢失"><a href="#第二类丢失更新-覆盖丢失-两次更新问题，Second-lost-update-：-A事务覆盖B事务已经提交的数据，造成B事务所做操作丢失" class="headerlink" title="第二类丢失更新(覆盖丢失/两次更新问题，Second lost update) ： A事务覆盖B事务已经提交的数据，造成B事务所做操作丢失"></a><strong>第二类丢失更新</strong>(覆盖丢失/两次更新问题，Second lost update) ： A事务覆盖B事务已经提交的数据，造成B事务所做操作丢失</h5><table>
<thead>
<tr>
<th align="center">事务A</th>
<th align="center">事务B</th>
</tr>
</thead>
<tbody><tr>
<td align="center"></td>
<td align="center">查询账户余额1000</td>
</tr>
<tr>
<td align="center">查询账户余额1000</td>
<td align="center"></td>
</tr>
<tr>
<td align="center"></td>
<td align="center">取出1000元，把余额改为0元</td>
</tr>
<tr>
<td align="center"></td>
<td align="center">commit</td>
</tr>
<tr>
<td align="center">汇入1000元</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">commit</td>
<td align="center"></td>
</tr>
<tr>
<td align="center">余额2000（丢失更新）</td>
<td align="center"></td>
</tr>
</tbody></table>
<h3 id="解决方案：-1"><a href="#解决方案：-1" class="headerlink" title="解决方案："></a>解决方案：</h3><h4 id="悲观锁和乐观锁"><a href="#悲观锁和乐观锁" class="headerlink" title="悲观锁和乐观锁"></a>悲观锁和乐观锁</h4><ul>
<li>悲观锁（Pessimistic Lock）</li>
</ul>
<p>每次获取数据的时候，都会担心数据被修改，所以每次获取数据的时候都会进行加锁，确保在自己使用的过程中数据不会被别人修改，使用完成后进行数据解锁。由于数据进行加锁，期间对该数据进行读写的其他线程都会进行等待。</p>
<ul>
<li>乐观锁（Optimistic Lock）</li>
</ul>
<p>每次获取数据的时候，都不会担心数据被修改，所以每次获取数据的时候都不会进行加锁，但是在更新数据的时候需要判断该数据是否被别人修改过。如果数据被其他线程修改，则不进行数据更新，如果数据没有被其他线程修改，则进行数据更新。由于数据没有进行加锁，期间该数据可以被其他线程进行读写操作。</p>
<h3 id="适用场景："><a href="#适用场景：" class="headerlink" title="适用场景："></a>适用场景：</h3><p>悲观锁：比较适合==写入操作==比较频繁的场景，如果出现大量的读取操作，每次读取的时候都会进行加锁，这样会增加大量的锁的开销，降低了系统的吞吐量。</p>
<p>乐观锁：比较适合==读取操作==比较频繁的场景，如果出现大量的写入操作，数据发生冲突的可能性就会增大，为了保证数据的一致性，应用层需要不断的重新获取数据，这样会增加大量的查询操作，降低了系统的吞吐量。</p>
<p>总结：两种所各有优缺点，读取频繁使用乐观锁，写入频繁使用悲观锁。</p>
<p><strong>悲观锁比较适合强一致性的场景，但效率比较低，特别是读的并发低。乐观锁则适用于读多写少，并发冲突少的场景。</strong></p>
<h3 id="注释："><a href="#注释：" class="headerlink" title="注释："></a>注释：</h3><p>RC级别，提供了读锁和写锁，解决了脏读问题。</p>
<p>RR级别，在已有读锁和写锁的基础上，增加了gap锁，即间隙锁，解决了幻读的问题(间隙锁解决了幻读，由此就能明白到底什么是幻读了)。</p>
]]></content>
  </entry>
  <entry>
    <title>GitPages和Hexo搭建个人博客</title>
    <url>/blog/2020/06/17/GitPages%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\blog\assets\css\APlayer.min.css"><script src="\blog\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="GitPages-Hexo搭建个人博客"><a href="#GitPages-Hexo搭建个人博客" class="headerlink" title="GitPages + Hexo搭建个人博客"></a>GitPages + Hexo搭建个人博客</h1><h2 id="为什么要写个人博客？"><a href="#为什么要写个人博客？" class="headerlink" title="为什么要写个人博客？"></a>为什么要写个人博客？</h2><ul>
<li><strong>个人空间</strong>：科技发展迅猛的情况下，网民日益增加，在这个流量为王的时代，通过个人博客来提高自己的知名度，打造个人品牌能为自己带来更多的益处。</li>
<li><strong>学无止境</strong>：学如逆水行舟，不进则退。在行业竞争力日益激烈的情况下，通过运营个人博客来让自己的知识不断增长，避免成为时代落伍，淘汰的那部分人。通过记录博客让自己对知识的理解更加深刻,同时可以当做备忘录的存在，好记性不如写博客。</li>
</ul>
<a id="more"></a>

<ul>
<li><strong>增强文采</strong>：作为IT行业的猿类已经日益被社会绝大多数人冠上”人傻“，”直男“的称号，通过文字记录博客，能加强自己的文采，同时一定会有各行各业大佬提出不同的质疑，正是这个不断沟通交流思考的过程增强自己的沟通能力，有可能让自己成为所谓的”暖(zha)男“.</li>
<li><strong>工作机会</strong>：求职前一定会准备一份由自己精心打造的简历，简历决定了第一印象，简历中加入自己的博客无疑会为自己加分不少。</li>
</ul>
<h2 id="个人博客到底是什么？"><a href="#个人博客到底是什么？" class="headerlink" title="个人博客到底是什么？"></a>个人博客到底是什么？</h2><ul>
<li><p><strong>域名</strong>：地址，因为ip地址是一长串数字且不直观所以为了方便记忆发明一套字符型地址方案。描述网站具体位置。</p>
</li>
<li><p><strong>服务器</strong>：存储网站资源的容器。</p>
</li>
<li><p><strong>博客系统</strong>:让用户在互联网上建立个人博客的系统，包含了构建，发布，管理等一系列操作。</p>
<p>博客本质是一个web网站，大致流程为：客户端通过浏览器中输入地址发起请求，根据地址去请求资源，并在获取到资源后展示在当前浏览器。</p>
<ol>
<li><strong>DNS域名解析</strong>：客户端去解析域名，确认对应服务器。</li>
<li><strong>建立连接</strong>：客户端与服务器连接。<a href="https://baike.baidu.com/item/%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B/5111559?fr=aladdin" target="_blank" rel="noopener">三次握手</a></li>
<li><strong>发送请求</strong>：客户端发送请求报文。</li>
<li><strong>服务器处理请求</strong>：服务器处理请求，查询数据，获取到相应资源。</li>
<li><strong>返回响应结果</strong>：服务器返回响应结果给客户端。</li>
<li><strong>关闭连接</strong></li>
<li><strong>浏览器解析HTML</strong>：浏览器解析html，css，js。加载静态资源（图片，视频等）。</li>
<li><strong>浏览器布局渲染</strong>：展示给用户。</li>
</ol>
</li>
</ul>
<p>​     具体流程请自行查看 <a href="https://zhuanlan.zhihu.com/p/31311964" target="_blank" rel="noopener">细说浏览器输入URL后发生了什么</a>，此处不过多赘述。</p>
<h2 id="怎么搭建个人博客？"><a href="#怎么搭建个人博客？" class="headerlink" title="怎么搭建个人博客？"></a>怎么搭建个人博客？</h2><h3 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h3><h4 id="Git：下载地址"><a href="#Git：下载地址" class="headerlink" title="Git：下载地址"></a><strong>Git</strong>：<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">下载地址</a></h4><h4 id="NodeJs：下载地址"><a href="#NodeJs：下载地址" class="headerlink" title="NodeJs：下载地址"></a><strong>NodeJs</strong>：<a href="http://nodejs.cn/download/" target="_blank" rel="noopener">下载地址</a></h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">检查是否安装成功</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> node —version</span></span><br></pre></td></tr></table></figure>

<h4 id="Hexo：中文文档"><a href="#Hexo：中文文档" class="headerlink" title="Hexo：中文文档"></a><strong>Hexo</strong>：<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">中文文档</a></h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">安装</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install -g hexo-cli</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看是否安装成功，查看版本号</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo -v</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo init &lt;folder&gt;</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> &lt;folder&gt;</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 清除缓存，和已生成的静态文件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo clean</span></span><br><span class="line"><span class="meta">#</span><span class="bash">生成静态文件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo generate</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动,默认访问：http://localhost:4000/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo server</span></span><br></pre></td></tr></table></figure>

<h4 id="GithubPages：Github提供的免费站点服务，自带域名和1G免费空间"><a href="#GithubPages：Github提供的免费站点服务，自带域名和1G免费空间" class="headerlink" title="GithubPages：Github提供的免费站点服务，自带域名和1G免费空间"></a>GithubPages：Github提供的免费站点服务，自带域名和1G免费空间</h4><h5 id="新建博客仓库：github新建一个名为你的用户名-github-io的repository，这样做的好处是避免生成的域名太长-具体可执行："><a href="#新建博客仓库：github新建一个名为你的用户名-github-io的repository，这样做的好处是避免生成的域名太长-具体可执行：" class="headerlink" title="新建博客仓库：github新建一个名为你的用户名.github.io的repository，这样做的好处是避免生成的域名太长,具体可执行："></a><strong>新建博客仓库</strong>：github新建一个名为<code>你的用户名.github.io</code>的repository，这样做的好处是避免生成的域名太长,具体可执行：<img data-src="./GitPages%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E6%96%B0%E5%BB%BAGitPages%E4%BB%93%E5%BA%93.png" alt="image-20200610180036253"></h5><h5 id="部署到GitPages"><a href="#部署到GitPages" class="headerlink" title="部署到GitPages"></a><strong>部署到GitPages</strong></h5><figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="comment">#修改hexo子目录中config.yml</span></span><br><span class="line"><span class="attr">deploy</span>:<span class="string"></span></span><br><span class="line">   <span class="attr">type</span>: <span class="string">git</span></span><br><span class="line">   <span class="attr">repository</span>: <span class="string">https://github.com/flyoptimistic/.github.io.git</span></span><br><span class="line">   <span class="attr">branch</span>: <span class="string">master   </span></span><br><span class="line"><span class="comment">#安装插件</span></span><br><span class="line"><span class="meta">$</span> <span class="string">npm install hexo-deployer-git —save</span></span><br><span class="line"><span class="comment">#执行以下命令发布本地博客到远程仓库</span></span><br><span class="line"><span class="meta">$</span> <span class="string">hexo deploy</span></span><br></pre></td></tr></table></figure>

<h2 id="怎么优化Hexo博客页面？"><a href="#怎么优化Hexo博客页面？" class="headerlink" title="怎么优化Hexo博客页面？"></a>怎么优化Hexo博客页面？</h2><p>此处都以next主题为例，如需别的主题可以点击<a href="https://hexo.io/themes/" target="_blank" rel="noopener">这里</a></p>
<h3 id="了解文件目录"><a href="#了解文件目录" class="headerlink" title="了解文件目录"></a>了解文件目录</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml   	#配置文件</span><br><span class="line">├── package.json	#应用程序的信息</span><br><span class="line">├── scaffolds		#模版 文件夹</span><br><span class="line">├── source  		#资源文件夹是存放用户资源的地方</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts		#生成的文章</span><br><span class="line">└── themes			#主题 文件夹</span><br></pre></td></tr></table></figure>

<h3 id="安装Next主题：官网"><a href="#安装Next主题：官网" class="headerlink" title="安装Next主题：官网"></a>安装Next主题：<a href="https://theme-next.org/" target="_blank" rel="noopener">官网</a></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">切换到blog文件夹下（就是hexo init的文件夹）</span></span><br><span class="line">cd [blog]</span><br><span class="line"><span class="meta">#</span><span class="bash">通过git安装 注意：此处next版本为8.0,如需别的版本请自行去github上查找。</span></span><br><span class="line">git clone https://github.com/next-theme/hexo-theme-next.git themes/next</span><br><span class="line"><span class="meta">#</span><span class="bash">切换到next主题：hexo根目录下编辑_config.yml文件</span></span><br><span class="line">theme: next</span><br><span class="line"><span class="meta">#</span><span class="bash">切换后，用命令清除下缓存</span></span><br><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line"><span class="meta">#</span><span class="bash">执行hexo s本地产看NexT主题效果</span></span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<h3 id="主题设定"><a href="#主题设定" class="headerlink" title="主题设定"></a>主题设定</h3><p>next目录下<strong>_config.yml</strong>文件 ：选择 Scheme</p>
<p>Scheme 是 NexT 提供的一种特性，借助于 Scheme，NexT 为你提供多种不同的外观。</p>
<ul>
<li>Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白</li>
<li>Mist - Muse 的紧凑版本，整洁有序的单栏外观</li>
<li>Pisces - 双栏 Scheme，小家碧玉似的清新</li>
</ul>
<p>Scheme 的切换通过更改 <strong>主题配置文件</strong>，搜索 scheme 关键字。 你会看到有三行 scheme 的配置，将你需用启用的 scheme 前面注释 <code>#</code> 去除即可。</p>
<h3 id="站点配置文件：文件位置：-config-yml-官网文档"><a href="#站点配置文件：文件位置：-config-yml-官网文档" class="headerlink" title="站点配置文件：文件位置：~/_config.yml 官网文档"></a>站点配置文件：文件位置：~/_config.yml <a href="https://hexo.io/docs/configuration.html" target="_blank" rel="noopener">官网文档</a></h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 网站标题、副标题、网站描述、关键词、作者、语言等基本信息的配置</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">北木南的博客</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">'心有猛虎，细嗅蔷薇'</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">北木南</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span>  </span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line"><span class="comment"># 博客的网址及文章 URL 结构，默认在根目录</span></span><br><span class="line"><span class="comment"># 如果你想要将博客设定在一个子目录，如 'http://yoursite.com/blog'，则将 root 设定为该子目录的名称 '/child/'</span></span><br><span class="line"><span class="comment"># 建议博客的 URL 结构在博客建立初期就规划好，因为当你写的文章被搜索引擎收录以及被读者收藏后，再更改结构，会对你的网站访问造成一定影响</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://github.com/flyoptimistic/flyoptimistic.github.io.git</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/blog</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:year/:month/:day/:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing 'index.html' from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing '.html' from permalinks</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里是设定一些基本文件夹的名称，如资源文件夹等。</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="comment">## skip_render 是为了避免在执行 'hexo generate' 命令后将一些你不想转义的文件转成 HTML 格式。</span></span><br><span class="line"><span class="comment">## 比如 README.md，你可以将这些文件名填写在括号内，格式为 [README.md, Post1.md, Post2.md]</span></span><br><span class="line"><span class="attr">skip_render:</span> <span class="string">[README.md]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span> <span class="comment"># Apply to the whole site</span></span><br><span class="line">  <span class="attr">exclude:</span> <span class="string">''</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment">## post_asset_folder 设置为 true 后，当你新建一个 post 的时候，会在同级目录生成一个相同名字的文件夹</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">## 代码高亮设置</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">''</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = '')</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">''</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="comment">## URL 中的分类和标签「翻译」成英文 参见：https://github.com/hexojs/hexo/issues/1162</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Metadata elements</span></span><br><span class="line"><span class="comment">## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta</span></span><br><span class="line"><span class="attr">meta_generator:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="string">HH:mm:ss</span></span><br><span class="line"><span class="comment">## Use post's date for updated date unless set in front-matter</span></span><br><span class="line"><span class="attr">use_date_for_updated:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Include / Exclude file(s)</span></span><br><span class="line"><span class="comment">## include:/exclude: options only apply to the 'source/' folder</span></span><br><span class="line"><span class="attr">include:</span></span><br><span class="line"><span class="attr">exclude:</span></span><br><span class="line"><span class="attr">ignore:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="comment">## 切换主题</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="comment">## 设定执行 'hexo deploy' 命令后提交的代码仓库地址</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">   <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">   <span class="attr">repository:</span> <span class="string">https://github.com/flyoptimistic/flyoptimistic.github.io.git</span></span><br><span class="line">   <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<h3 id="主题配置文件"><a href="#主题配置文件" class="headerlink" title="主题配置文件"></a>主题配置文件</h3><h4 id="页脚信息"><a href="#页脚信息" class="headerlink" title="页脚信息"></a>页脚信息</h4><p>在网页的底部显示版权信息，包括年份、图标、作者信息，是否显示 Hexo 及其版本、NexT 及其版本，还有备案信息。图标名称需要填写 <a href="https://fontawesome.com/" target="_blank" rel="noopener">Font Awesome</a> 中提供的图标名称。如果你想要添加任何自定义内容，比如添加一句话，可以考虑在 <code>~/source/_data/</code> 路径下建立 <code>footer.swig</code> 文件，在该文件下添加内容。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">    <span class="attr">icon:</span></span><br><span class="line">    <span class="comment"># 设置图标，如需要别的请自行查找 https://fontawesome.com/icons</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">fa</span> <span class="string">fa-heart</span></span><br><span class="line">    <span class="comment"># 设置动画效果</span></span><br><span class="line">    <span class="attr">animated:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 颜色</span></span><br><span class="line">    <span class="attr">color:</span> <span class="string">"#ff0000"</span></span><br><span class="line">    <span class="comment"># If not defined, `author` from Hexo `_config.yml` will be used.</span></span><br><span class="line">    <span class="attr">copyright:</span></span><br><span class="line">    <span class="comment"># 修改为false，去除hexo和next页脚链接</span></span><br><span class="line">    <span class="attr">powered:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h4 id="导航目录"><a href="#导航目录" class="headerlink" title="导航目录"></a>导航目录</h4><h5 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h5><p>你可以在此处设置目录选项的名称和所在文件夹的位置，以及对应的图标，这里的图标同样需要对应 <a href="https://fontawesome.com/" target="_blank" rel="noopener">Font Awesome</a>  中图标的名称。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br><span class="line"></span><br><span class="line"><span class="attr">menu_settings:</span></span><br><span class="line">  <span class="attr">icons:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">badges:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<ul>
<li><code>home:</code> 该目录名称，对应<code>~/themes/next/languages/zh-CN.yml</code> 下对应的 <code>menu:</code> 下添加对应的中文，格式为 <code>home: 首页</code>。</li>
<li><code>/</code> 即为网站的根目录。</li>
<li><code>||</code> 后的 <code>home</code> 即为图标名称。</li>
</ul>
<h5 id="创建目录页面"><a href="#创建目录页面" class="headerlink" title="创建目录页面"></a>创建目录页面</h5><ul>
<li><p>建立标签页面和分类页面，首先需要去掉 <code>tags</code> 和 <code>categories</code> 前的注释，然后在 <code>~/source/</code> 文件夹下建立该页面，对应名称为 <code>tags</code> 和 <code>categories</code>。可以执行以下命令生成：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo new page tags</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo new page categories</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>执行上述命令后会在 <code>~/source/</code> 文件夹中生成了对应名称的文件夹，在该文件夹下有一个 <code>index.md</code> 文件，打开该文件，在如下所示位置添加内容：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">about</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2020</span><span class="number">-06</span><span class="number">-12</span> <span class="number">15</span><span class="string">:36:24</span></span><br><span class="line"><span class="comment">#添加type</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"about"</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="设置侧栏阅读进度百分比"><a href="#设置侧栏阅读进度百分比" class="headerlink" title="设置侧栏阅读进度百分比"></a>设置侧栏阅读进度百分比</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment">#侧边栏回到顶部</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment">#百分比</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h4 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># 替换掉默认路径并设置头像路径</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/avatar.jpg</span> </span><br><span class="line">  <span class="comment"># 圆形</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 旋转</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<h4 id="设置网页标签图标"><a href="#设置网页标签图标" class="headerlink" title="设置网页标签图标"></a>设置网页标签图标</h4><p><a href="http://www.ico51.cn/" target="_blank" rel="noopener">制作icon链接</a></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">favicon:</span></span><br><span class="line">  <span class="attr">small:</span> <span class="string">/images/favicon_16.ico</span>  <span class="comment">#此处放制作好的链接</span></span><br><span class="line">  <span class="attr">medium:</span> <span class="string">/images/favicon_32.ico</span></span><br><span class="line">  <span class="comment">#apple_touch_icon: /images/apple-touch-icon-next.png</span></span><br><span class="line">  <span class="comment">#safari_pinned_tab: /images/logo.svg</span></span><br><span class="line">  <span class="comment">#android_manifest: /images/manifest.json</span></span><br><span class="line">  <span class="comment">#ms_browserconfig: /images/browserconfig.xml</span></span><br></pre></td></tr></table></figure>



<h4 id="设置github图标"><a href="#设置github图标" class="headerlink" title="设置github图标"></a>设置github图标</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">github_banner:</span> <span class="comment"># 开启github</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">permalink:</span> <span class="string">https://github.com/flyoptimistic</span> <span class="comment">#跳转自己的仓库链接</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Follow</span> <span class="string">me</span> <span class="string">on</span> <span class="string">GitHub</span></span><br></pre></td></tr></table></figure>

<h4 id="图片浏览"><a href="#图片浏览" class="headerlink" title="图片浏览"></a>图片浏览</h4><p>实现该功能的基础是在文章中插入图片。该项功能的效果是：点击文中插图，图片能够放大，有幻灯片的效果。目前 NexT 提供了两款插件 fancybox 和 mediumzoom，两款插件开启一个即可。</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">fancybox:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">mediumzoom:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h4 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h4><p>支持 MathJax 和 KaTeX 两种加载数学公式的方法，使用语法都是 LaTeX 语法。不过 MathJax 的功能比较全面，KaTeX 的加载速度比较快。不过有一点要注意，不论是用哪一个方式，我都推荐替换默认渲染器。</p>
<p>MathJax 使用 hexo-renderer-pandoc 或者 hexo-renderer-kramed；KaTeX 使用 hexo-renderer-markdown-it-plus 或者 hexo-renderer-markdown-it。</p>
<p>默认的 <code>per_page: true</code> 的意思是，只用当你在文章设定中添加 <code>mathjax: ture</code>，才会在当前页面中加载公式渲染。如果你使用的是 KaTeX，还要注意，过长的公式会超出页面边框，可能需要自行添加 CSS 样式对长公式进行滚动浏览。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="comment"># 只渲染前面有 `mathjax: true` 的页面.</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># hexo-renderer-pandoc (or hexo-renderer-kramed) required for full MathJax support.</span></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># See: https://mhchem.github.io/MathJax-mhchem/</span></span><br><span class="line">    <span class="attr">mhchem:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">katex:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># See: https://github.com/KaTeX/KaTeX/tree/master/contrib/copy-tex</span></span><br><span class="line">    <span class="attr">copy_tex:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>



<h4 id="访客统计"><a href="#访客统计" class="headerlink" title="访客统计"></a>访客统计</h4><p><a href="http://ibruce.info/2015/04/04/busuanzi" target="_blank" rel="noopener">卜算子统计官网</a></p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="comment">#开启</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br><span class="line">  <span class="attr">post_views:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span></span><br></pre></td></tr></table></figure>

<h4 id="评论功能"><a href="#评论功能" class="headerlink" title="评论功能"></a>评论功能</h4><h5 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h5><p><a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a> 评论系统是我认为的在国内网络环境下最好用的评论系统，可通过 Leancloud 管理评论，无广告，简洁美观。不过缺点就是，Leancloud 平台的不稳定性，在 2019 年夏季的时候，出现了一次域名停止解析的事故，原因是有人利用 Leancloud 进行一些非法行为，而平台管理人员并没有监管到位。在那次事故之后，Leancloud 加强了监管，国内用户必须进行实名注册，每一个服务器必须绑定一个备案的域名。如果你不想备案，可以选择使用 Leancloud 国际版。但谁也无法确保 Leancloud 国际版会发生什么事情。</p>
<p>Leancloud 国内版和国际版的配置相同，这里以国际版为例进行说明。首先进入<a href="https://leancloud.app/" target="_blank" rel="noopener">官网</a>进行用户注册，注册完成后点击「创建应用」，填写应用的名称，选择「开发版」进行创建。</p>
<h6 id="创建应用"><a href="#创建应用" class="headerlink" title="创建应用"></a>创建应用</h6><p><img data-src="/%E5%88%9B%E5%BB%BAleancloud%E5%BA%94%E7%94%A8.png" alt="创建leancloud应用"></p>
<h6 id="创建class"><a href="#创建class" class="headerlink" title="创建class"></a>创建class</h6><p><img data-src="./GitPages%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/leancloud_%E5%88%9B%E5%BB%BAclass.png" alt="leancloud_创建class"></p>
<h6 id="获取appid和appkey"><a href="#获取appid和appkey" class="headerlink" title="获取appid和appkey"></a>获取appid和appkey</h6><p><img data-src="./GitPages%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/leancloud_%E8%8E%B7%E5%8F%96%E4%BF%A1%E6%81%AF.png" alt="leancloud_获取信息"></p>
<h5 id="修改主题配置文件"><a href="#修改主题配置文件" class="headerlink" title="修改主题配置文件"></a>修改主题配置文件</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Valine</span></span><br><span class="line"><span class="comment"># 更多信息: https://valine.js.org, https://github.com/xCss/Valine</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appId:</span>  <span class="comment"># leancloud 应用 appid</span></span><br><span class="line">  <span class="attr">appKey:</span> <span class="comment"># leancloud 应用 appkey</span></span><br><span class="line">  <span class="attr">placeholder:</span> <span class="string">来都来了，留下点宝贵建议吧！</span> <span class="comment"># Comment box placeholder</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">mm</span> <span class="comment"># Gravatar style</span></span><br><span class="line">  <span class="attr">meta:</span> <span class="string">[nick,</span> <span class="string">mail,</span> <span class="string">link]</span> <span class="comment"># Custom comment header</span></span><br><span class="line">  <span class="attr">pageSize:</span> <span class="number">10</span> <span class="comment"># Pagination size</span></span><br><span class="line">  <span class="attr">language:</span> <span class="comment"># Language, available values: en, zh-cn</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span> <span class="comment"># Article reading statistic</span></span><br><span class="line">  <span class="attr">comment_count:</span> <span class="literal">true</span> <span class="comment"># If false, comment count will only be displayed in post page, not in home page</span></span><br><span class="line">  <span class="attr">recordIP:</span> <span class="literal">false</span> <span class="comment"># Whether to record the commenter IP</span></span><br><span class="line">  <span class="attr">serverURLs:</span> <span class="comment"># When the custom domain name is enabled, fill it in here (it will be detected automatically by default, no need to fill in)</span></span><br><span class="line">  <span class="comment">#post_meta_order: 0</span></span><br></pre></td></tr></table></figure>

<h4 id="本地搜索"><a href="#本地搜索" class="headerlink" title="本地搜索"></a>本地搜索</h4><h5 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<h5 id="站点配置文件-config-yml添加"><a href="#站点配置文件-config-yml添加" class="headerlink" title="站点配置文件_config.yml添加"></a>站点配置文件<code>_config.yml</code>添加</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">    <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">    <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">5000</span></span><br></pre></td></tr></table></figure>

<h5 id="主题配置文件-1"><a href="#主题配置文件-1" class="headerlink" title="主题配置文件"></a>主题配置文件</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<h4 id="添加分享"><a href="#添加分享" class="headerlink" title="添加分享"></a>添加分享</h4><h5 id="打开addthis官网"><a href="#打开addthis官网" class="headerlink" title="打开addthis官网"></a>打开<a href="https://www.addthis.com/dashboard#tool-config/pub/ra-5eeb31b88c2ca90e" target="_blank" rel="noopener">addthis官网</a></h5><h5 id="注册-1"><a href="#注册-1" class="headerlink" title="注册"></a>注册</h5><h5 id="选择分享工具"><a href="#选择分享工具" class="headerlink" title="选择分享工具"></a>选择分享工具</h5><p><img data-src="./GitPages%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E5%88%86%E4%BA%AB%E9%80%89%E6%8B%A9%E6%8C%89%E9%92%AE.png" alt="分享选择按钮"></p>
<h5 id="生成代码"><a href="#生成代码" class="headerlink" title="生成代码"></a>生成代码</h5><h5 id="获取pubid"><a href="#获取pubid" class="headerlink" title="获取pubid"></a>获取pubid</h5><p><img data-src="./GitPages%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E7%94%9F%E6%88%90%E5%88%86%E4%BA%ABid.png" alt="生成分享id"></p>
<h5 id="修改主题配置文件-config-yml"><a href="#修改主题配置文件-config-yml" class="headerlink" title="修改主题配置文件 _config.yml_"></a>修改主题配置文件 <code>_config.yml</code>_</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">add_this_id:  #设置为你的id</span><br></pre></td></tr></table></figure>

<h3 id="网页样式布局"><a href="#网页样式布局" class="headerlink" title="网页样式布局"></a>网页样式布局</h3><p>在对 NexT 主题的个性优化中，如果想要添加一些个性化的内容，就需要对内部代码进行修改。主题提供了许多注入点，可以通过注入点插入自己想要的东西，而不会对原有的主题内部文件进行大量的修改。这样便于以后主题的升级，避免一系列的错误发生。NexT 主题更新到 v7.2.0 后，<a href="https://github.com/theme-next/hexo-theme-next/pull/868">PR #868</a> 简化了自定义内容的添加方法，删除了以前版本中所用的 <code>css/_custom.styl</code> 自定义 CSS 样式文件。如果想要修改样式或者在 HTML 中的 <code>、</code> 等部位插入代码。即直接在博客 <code>sourse</code> 资源文件夹下新建自定义文件 <code>_data/xxx</code> 实现该功能。</p>
<p>主题配置文件 <code>_config.yml</code> 中：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 自定义文件路径</span></span><br><span class="line"><span class="comment"># 在`source/_data` 创建自定义文件，并打开需要的注释.</span></span><br><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="comment">#head: source/_data/head.njk</span></span><br><span class="line">  <span class="comment">#header: source/_data/header.njk</span></span><br><span class="line">  <span class="comment">#sidebar: source/_data/sidebar.njk</span></span><br><span class="line">  <span class="comment">#postMeta: source/_data/post-meta.njk</span></span><br><span class="line">  <span class="comment">#postBodyEnd: source/_data/post-body-end.njk</span></span><br><span class="line">  <span class="comment">#footer: source/_data/footer.njk</span></span><br><span class="line">  <span class="comment">#bodyEnd: source/_data/body-end.njk</span></span><br><span class="line">  <span class="comment">#variable: source/_data/variables.styl</span></span><br><span class="line">  <span class="comment">#mixin: source/_data/mixins.styl</span></span><br><span class="line">  <span class="comment">#style: source/_data/styles.styl</span></span><br></pre></td></tr></table></figure>

<h4 id="基本修改方法"><a href="#基本修改方法" class="headerlink" title="基本修改方法"></a>基本修改方法</h4><p>NexT 主题最大的特点就是主题基础颜色简单，白加黑的简单组合为我们提供了能够随心所欲进行自定义的空间。修改颜色、修改图形、修改动画……这些都能够实现。控制这些自定义样式布局的文件即为 <code>styles.styl</code>。该文件在主题安装后并不存在，需要你自己建立。首先，你需要在主题配置文件 <code>_config.yml</code> 中，将下面一栏的注释删除：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">    <span class="attr">style:</span> <span class="string">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure>

<p>然后在你的在博客根目录下的 <code>source</code> 文件夹下新建 <code>_data</code> 文件夹，在该文件夹下创建名为 <code>styles.styl</code> 的文件。这里需要注意，不要将 <code>source</code> 文件夹创建在主题文件夹中。</p>
<p>该文件有什么作用呢？你可以将自定义的 CSS 样式写入该文件中，这些自定义样式会覆盖主题原有的样式设定。那么该如何自定义样式呢？你只需要一个工具——浏览器。这里我推荐使用 Google 的 Chrome 浏览器，通过浏览器打开你的网站，右键，点击「检查」或者按键盘上的「F12」键，进入<a href="https://developers.google.com/web/tools/chrome-devtools/" target="_blank" rel="noopener">调试模式</a>。然后点击窗口右上角的小箭头定位元素，定位到你需要修改的元素区域，调试台就会显示这一元素的 CSS 代码，在这里修改你想要的样式，再将其 Copy 到 <code>styles.styl</code> 中就可以了。</p>
<h4 id="添加顶部加载"><a href="#添加顶部加载" class="headerlink" title="添加顶部加载"></a>添加顶部加载</h4><p>在<code>~\themes\next\layout\_partials\head\head.njk</code>文件中添加如下代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;script src=<span class="string">"//cdn.bootcss.com/pace/1.0.2/pace.min.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;link href="/</span><span class="regexp">/cdn.bootcss.com/</span>pace/<span class="number">1.0</span><span class="number">.2</span>/themes/pink/pace-theme-flash.css<span class="string">" rel="</span>stylesheet<span class="string">"&gt;</span></span><br><span class="line"><span class="string">&lt;style&gt;</span></span><br><span class="line"><span class="string">  .pace .pace-progress &#123;</span></span><br><span class="line"><span class="string">	  background: #1E92FB; /*进度条颜色*/</span></span><br><span class="line"><span class="string">	  height: 3px;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  .pace .pace-progress-inner &#123;</span></span><br><span class="line"><span class="string">	   box-shadow: 0 0 10px #1E92FB, 0 0 5px     #1E92FB; /*阴影颜色*/</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">  .pace .pace-activity &#123;</span></span><br><span class="line"><span class="string">	  border-top-color: #1E92FB;    /*上边框颜色*/</span></span><br><span class="line"><span class="string">	  border-left-color: #1E92FB;    /*左边框颜色*/</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&lt;/style&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="修改标签样式"><a href="#修改标签样式" class="headerlink" title="修改标签样式"></a>修改标签样式</h4><p>修改<code>~\themes\next\_config.yml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 使用图标代替#</span></span><br><span class="line"><span class="attr">tag_icon:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h4 id="添加球形标签云样式"><a href="#添加球形标签云样式" class="headerlink" title="添加球形标签云样式"></a>添加球形标签云样式</h4><p><img data-src="/GitPages%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E6%A0%87%E7%AD%BE%E4%BA%91.gif" alt="标签云"></p>
<p>首先要确保你已经开启标签功能。目前有一个标签云插件可以提供这样的效果：<a href="https://github.com/MikeCoder/hexo-tag-cloud/blob/master/README.ZH.md">hexo-tag-cloud</a>。执行 <code>npm install hexo-tag-cloud --save</code> 进行安装。插件安装完成后，你可以自定义标签云的位置，比如显示在侧栏，或者显示在标签页面。比如选择显示在标签页面，则在 <code>~/themes/next/layout/page.njk</code> 中，添加如下所示代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> site.tags.length &gt; <span class="number">1</span> %&#125;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> charset=<span class="string">"utf-8"</span> src=<span class="string">"&#123;&#123; url_for('/js/tagcloud.js') &#125;&#125;"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;script type="text/</span>javascript<span class="string">" charset="</span>utf<span class="number">-8</span><span class="string">" src="</span>&#123;&#123; url_for(<span class="string">'/js/tagcanvas.js'</span>) &#125;&#125;<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;div class="</span>widget-wrap<span class="string">"&gt;</span></span><br><span class="line"><span class="string">    &lt;h3 class="</span>widget-title<span class="string">"&gt;Tag Cloud&lt;/h3&gt;</span></span><br><span class="line"><span class="string">    &lt;div id="</span>myCanvasContainer<span class="string">" class="</span>widget tagcloud<span class="string">"&gt;</span></span><br><span class="line"><span class="string">        &lt;canvas width="</span><span class="number">250</span><span class="string">" height="</span><span class="number">250</span><span class="string">" id="</span>resCanvas<span class="string">" style="</span>width:<span class="number">100</span>%<span class="string">"&gt;</span></span><br><span class="line"><span class="string">            &#123;&#123; list_tags() &#125;&#125;</span></span><br><span class="line"><span class="string">        &lt;/canvas&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure>

<p>最后，你可以选择在博客根目录配置文件 <code>_config.yml</code> 中添加如下的配置项进行更细致的设定:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#球形标签云</span></span><br><span class="line"><span class="attr">tag_cloud:</span></span><br><span class="line">    <span class="attr">textFont:</span> <span class="string">Trebuchet</span> <span class="string">MS,</span> <span class="string">Helvetica</span></span><br><span class="line">    <span class="attr">textColor:</span> <span class="string">'#333'</span></span><br><span class="line">    <span class="attr">textHeight:</span> <span class="number">25</span></span><br><span class="line">    <span class="attr">outlineColor:</span> <span class="string">'#E2E1D1'</span></span><br><span class="line">    <span class="attr">maxSpeed:</span> <span class="number">0.5</span></span><br><span class="line">    <span class="attr">pauseOnSelected:</span> <span class="literal">true</span> <span class="comment"># true 意味着当选中对应 tag 时,停止转动</span></span><br></pre></td></tr></table></figure>

<h4 id="添加线状动态背景"><a href="#添加线状动态背景" class="headerlink" title="添加线状动态背景"></a>添加线状动态背景</h4><p><img data-src="/GitPages%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E7%BA%BF%E6%80%A7%E5%8A%A8%E6%80%81%E8%83%8C%E6%99%AF.gif" alt="线性动态背景"></p>
<ul>
<li><p>修改<code>next/layout/_layout.njk</code>_,添加到末尾</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> theme.canvas_nest %&#125;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p><code>/next/_config.yml</code>添加</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># --------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># background settings</span></span><br><span class="line"><span class="comment"># --------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># add canvas-nest effect</span></span><br><span class="line"><span class="comment"># see detail from https://github.com/hustcc/canvas-nest.js</span></span><br><span class="line"><span class="attr">canvas_nest:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="添加点击爱心特效"><a href="#添加点击爱心特效" class="headerlink" title="添加点击爱心特效"></a>添加点击爱心特效</h4><p>首先在 <code>~/themes/next/source/js/</code> 下新建文件 <code>clicklove.js</code>，接着把以下的代码拷贝粘贴到该文件中：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* 所在目录：~/themes/next/source/js/ */</span></span><br><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;<span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>),o(),r()&#125;<span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;<span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">"left:"</span>+d[e].x+<span class="string">"px;top:"</span>+d[e].y+<span class="string">"px;opacity:"</span>+d[e].alpha+<span class="string">";transform:scale("</span>+d[e].scale+<span class="string">","</span>+d[e].scale+<span class="string">") rotate(45deg);background:"</span>+d[e].color+<span class="string">";z-index:99999"</span>);requestAnimationFrame(r)&#125;<span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;<span class="keyword">var</span> t=<span class="string">"function"</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;&#125;<span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"div"</span>);a.className=<span class="string">"heart"</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX<span class="number">-5</span>,<span class="attr">y</span>:e.clientY<span class="number">-5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">var</span> a=t.createElement(<span class="string">"style"</span>);a.type=<span class="string">"text/css"</span>;<span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">"rgb("</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">")"</span>&#125;<span class="keyword">var</span> d=[];e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;setTimeout(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure>

<p>然后在 <code>~/theme/next/layout/_layout.njk</code> 文件的末尾添加引用：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!-- 文件位置：~<span class="regexp">/theme/</span>next/layout/_layout.njk --&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/clicklove.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h4><h5 id="阿里云储存对象-OSS-服务：可以放在阿里云上"><a href="#阿里云储存对象-OSS-服务：可以放在阿里云上" class="headerlink" title="阿里云储存对象 OSS 服务：可以放在阿里云上"></a><a href="https://www.aliyun.com/product/oss/" target="_blank" rel="noopener">阿里云储存对象 OSS 服务</a>：可以放在阿里云上</h5><h5 id="hexo-asset-image插件"><a href="#hexo-asset-image插件" class="headerlink" title="hexo-asset-image插件"></a><a href="https://github.com/xcodebuild/hexo-asset-image">hexo-asset-image</a>插件</h5><h6 id="安装插件-1"><a href="#安装插件-1" class="headerlink" title="安装插件"></a>安装插件</h6><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>

<h6 id="修改博客配置文件-config-yml："><a href="#修改博客配置文件-config-yml：" class="headerlink" title="修改博客配置文件 _config.yml："></a>修改博客配置文件 <code>_config.yml</code>：</h6><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment">#post_asset_folder 设置为 true 后，当你新建一个 post 的时候，会在同级目录生成一个相同名字的文件夹</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h6 id="解决插件自身bug"><a href="#解决插件自身bug" class="headerlink" title="解决插件自身bug"></a>解决插件自身bug</h6><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"># 文件位置：~/node_modules/hexo-asset-image/index.js</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    #var endPos = link.length-1</span><br><span class="line">	<span class="keyword">var</span> endPos = link.lastIndexOf(<span class="string">'.'</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h6 id="引入图片"><a href="#引入图片" class="headerlink" title="引入图片"></a>引入图片</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![Alt text](&#x2F;path&#x2F;to&#x2F;img.jpg)</span><br><span class="line">![Alt text](&#x2F;path&#x2F;to&#x2F;img.jpg &quot;Optional title&quot;)</span><br></pre></td></tr></table></figure>

<p>对于 Markdown 图片引用的代码，主要有三个部分：</p>
<ol>
<li><code>Alt text</code>，替代文本，图片无法显示时读者看到的就是它</li>
<li><code>/path/to/img.jpg</code>，URL，即图片的链接</li>
<li><code>Optional title</code>，图片的标题</li>
</ol>
<h4 id="添加动态模型插件"><a href="#添加动态模型插件" class="headerlink" title="添加动态模型插件"></a>添加动态模型插件</h4><p><a href="https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md">中文文档</a></p>
<h5 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">安装插件</span></span><br><span class="line">npm install --save hexo-helper-live2d</span><br><span class="line"><span class="meta">#</span><span class="bash">安装动态模型，此处可以选择自己喜欢的模型 https://huaji8.top/post/live2d-plugin-2.0/</span></span><br><span class="line">npm install --save live2d-widget-model-z16</span><br></pre></td></tr></table></figure>

<h5 id="在-themes-next-layout-layout-njk添加"><a href="#在-themes-next-layout-layout-njk添加" class="headerlink" title="在 ~/themes/next/layout/layout.njk添加"></a>在 <code>~/themes/next/layout/layout.njk</code>添加</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#末尾添加就行</span><br><span class="line">&#123;&#123; live2d() &#125;&#125;</span><br></pre></td></tr></table></figure>

<h5 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置~/_config.yml"></a>配置<code>~/_config.yml</code></h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加动态模型插件</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-z16</span> <span class="comment">## 对应安装的宠物依赖包</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">right</span>  <span class="comment">##位置</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">150</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">300</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">react:</span></span><br><span class="line">    <span class="attr">opacity:</span> <span class="number">0.7</span></span><br></pre></td></tr></table></figure>

<h4 id="添加音乐"><a href="#添加音乐" class="headerlink" title="添加音乐"></a>添加音乐</h4><h5 id="直接使用-HTML-的标签，格式如下，其中-music-url-替换为你需要加载的音乐即可："><a href="#直接使用-HTML-的标签，格式如下，其中-music-url-替换为你需要加载的音乐即可：" class="headerlink" title="直接使用 HTML 的标签，格式如下，其中 music-url 替换为你需要加载的音乐即可："></a>直接使用 HTML 的标签，格式如下，其中 <code>music-url</code> 替换为你需要加载的音乐即可：</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"music-url"</span> <span class="attr">style</span>=<span class="string">"max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;"</span> <span class="attr">controls</span>=<span class="string">"controls"</span> <span class="attr">loop</span>=<span class="string">"loop"</span> <span class="attr">preload</span>=<span class="string">"meta"</span>&gt;</span>Your browser does not support the audio tag.<span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="使用hexo-tag-aplayer插件"><a href="#使用hexo-tag-aplayer插件" class="headerlink" title="使用hexo-tag-aplayer插件"></a>使用<a href="https://github.com/MoePlayer/hexo-tag-aplayer">hexo-tag-aplayer</a>插件</h5><h6 id="安装插件-2"><a href="#安装插件-2" class="headerlink" title="安装插件"></a>安装插件</h6><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-tag-aplayer --save</span><br></pre></td></tr></table></figure>

<h6 id="载入标签格式如下："><a href="#载入标签格式如下：" class="headerlink" title="载入标签格式如下："></a>载入标签格式如下：</h6><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;% aplayer <span class="string">"歌曲名"</span> <span class="string">"歌手名"</span> <span class="string">"https://什么什么什么.mp3"</span> <span class="string">"https://封面图.jpg"</span> <span class="string">"lrc:https://歌词.lrc"</span> %&#125;</span><br></pre></td></tr></table></figure>

<h6 id="歌单："><a href="#歌单：" class="headerlink" title="歌单："></a>歌单：</h6><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;% aplayerlist %&#125;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"autoplay"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">"showlrc"</span>: <span class="number">3</span>,</span><br><span class="line">    <span class="string">"mutex"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">"music"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"title"</span>: <span class="string">"歌曲名"</span>,</span><br><span class="line">            <span class="string">"author"</span>: <span class="string">"歌手名"</span>,</span><br><span class="line">            <span class="string">"url"</span>: <span class="string">"https://什么什么什么.mp3"</span>,</span><br><span class="line">            <span class="string">"pic"</span>: <span class="string">"https://封面图.jpg"</span>,</span><br><span class="line">            <span class="string">"lrc"</span>: <span class="string">"https://歌词.lrc"</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">"title"</span>: <span class="string">"歌曲名"</span>,</span><br><span class="line">            <span class="string">"author"</span>: <span class="string">"歌手名"</span>,</span><br><span class="line">            <span class="string">"url"</span>: <span class="string">"https://什么什么什么.mp3"</span>,</span><br><span class="line">            <span class="string">"pic"</span>: <span class="string">"https://封面图.jpg"</span>,</span><br><span class="line">            <span class="string">"lrc"</span>: <span class="string">"https://歌词.lrc"</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">&#123;% endaplayerlist %&#125;</span><br></pre></td></tr></table></figure>

<h6 id="网易云音乐生成外链"><a href="#网易云音乐生成外链" class="headerlink" title="网易云音乐生成外链"></a>网易云音乐生成外链</h6><p>网页中打开<a href="https://music.163.com/" target="_blank" rel="noopener">网易云官网</a></p>
<p><img data-src="./GitPages%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90.png" alt="网易云音乐"></p>
<p>生成外链代码</p>
<p><img data-src="./GitPages%E5%92%8CHexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/%E7%94%9F%E6%88%90%E9%9F%B3%E4%B9%90%E5%A4%96%E9%93%BE%E4%BB%A3%E7%A0%81.png" alt="生成音乐外链代码"></p>
<p>将外链代码插入到侧边栏文件<code>~/themes/next/layout/_macro/sidebar.swig</code></p>
<h4 id="插入视频"><a href="#插入视频" class="headerlink" title="插入视频"></a>插入视频</h4><h5 id="HTML-的标签"><a href="#HTML-的标签" class="headerlink" title="HTML 的标签"></a>HTML 的标签</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">poster</span>=<span class="string">"https://封面图.jpg"</span> <span class="attr">src</span>=<span class="string">"https://什么什么什么.mp4"</span> <span class="attr">style</span>=<span class="string">"max-height :100%; max-width: 100%; display: block; margin-left: auto; margin-right: auto;"</span> <span class="attr">controls</span>=<span class="string">"controls"</span> <span class="attr">loop</span>=<span class="string">"loop"</span> <span class="attr">preload</span>=<span class="string">"meta"</span>&gt;</span>Your browser does not support the video tag.<span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="hexo-tag-dplayer插件"><a href="#hexo-tag-dplayer插件" class="headerlink" title="hexo-tag-dplayer插件"></a><a href="https://github.com/MoePlayer/hexo-tag-dplayer">hexo-tag-dplayer</a>插件</h5><h6 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h6><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-tag-dplayer --save</span><br></pre></td></tr></table></figure>

<h6 id="插入文章"><a href="#插入文章" class="headerlink" title="插入文章"></a>插入文章</h6><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&#123;% dplayer <span class="string">"url=https://什么什么什么.mp4"</span> <span class="string">"https://封面图.jpg"</span> <span class="string">"api=https://api.prprpr.me/dplayer/"</span> <span class="string">"id="</span> <span class="string">"loop=false"</span> %&#125;</span><br></pre></td></tr></table></figure>

<h4 id="文末添加相关文章"><a href="#文末添加相关文章" class="headerlink" title="文末添加相关文章"></a>文末添加相关文章</h4><h5 id="hexo-recommended-posts插件"><a href="#hexo-recommended-posts插件" class="headerlink" title="hexo-recommended-posts插件"></a><a href="https://github.com/huiwang/hexo-recommended-posts">hexo-recommended-posts</a>插件</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-recommended-posts --save</span><br></pre></td></tr></table></figure>

<h5 id="在编辑完新的文章之后，使用如下命令获取推荐列表"><a href="#在编辑完新的文章之后，使用如下命令获取推荐列表" class="headerlink" title="在编辑完新的文章之后，使用如下命令获取推荐列表"></a>在编辑完新的文章之后，使用如下命令获取推荐列表</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo recommend</span><br></pre></td></tr></table></figure>

<h5 id="如果你对默认显示的位置和样式不满意，可以进行自定义设定。在博客根目录的-config-yml-添加："><a href="#如果你对默认显示的位置和样式不满意，可以进行自定义设定。在博客根目录的-config-yml-添加：" class="headerlink" title="如果你对默认显示的位置和样式不满意，可以进行自定义设定。在博客根目录的 _config.yml 添加："></a>如果你对默认显示的位置和样式不满意，可以进行自定义设定。在博客根目录的 <code>_config.yml</code> 添加：</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Dependency: https://github.com/huiwang/hexo-recommended-posts</span></span><br><span class="line"><span class="attr">recommended_posts:</span></span><br><span class="line">  <span class="attr">server:</span> <span class="string">https://api.truelaurel.com</span> <span class="comment">#后端推荐服务器地址</span></span><br><span class="line">  <span class="attr">timeoutInMillis:</span> <span class="number">10000</span> <span class="comment">#服务时长，超过此时长，则使用离线推荐模式</span></span><br><span class="line">  <span class="attr">internalLinks:</span> <span class="number">3</span> <span class="comment">#内部文章数量</span></span><br><span class="line">  <span class="attr">externalLinks:</span> <span class="number">1</span> <span class="comment">#外部文章数量</span></span><br><span class="line">  <span class="attr">fixedNumber:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">autoDisplay:</span> <span class="literal">true</span> <span class="comment">#自动在文章底部显示推荐文章</span></span><br><span class="line">  <span class="attr">excludePattern:</span> <span class="string">[]</span></span><br><span class="line">  <span class="attr">titleHtml:</span> <span class="string">&lt;h1&gt;推荐文章&lt;span</span> <span class="string">style="font-size:0.45em;</span> <span class="string">color:gray"&gt;（由&lt;a</span> <span class="string">href="https://github.com/huiwang/hexo-recommended-posts"&gt;hexo文章推荐插件&lt;/a&gt;驱动）&lt;/span&gt;&lt;/h1&gt;</span> <span class="comment">#自定义标题</span></span><br></pre></td></tr></table></figure>

<p>其中 <code>excludePattern</code> 可以添加想要被过滤的链接的正则表达式, 如配置为 <code>[&quot;example.com&quot;]</code>, 则所有包含 <code>example.com</code> 的链接都会从推荐文章中过滤掉.</p>
<p><code>fixedNumber</code> 字段用来控制是否返回固定数量的推荐文章, 如果默认推荐文章不够的话会填充当前文章的前后文章作为推荐文章.</p>
<h5 id="在主题根目录的-config-yml-添加："><a href="#在主题根目录的-config-yml-添加：" class="headerlink" title="在主题根目录的 _config.yml 添加："></a>在主题根目录的 <code>_config.yml</code> 添加：</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 推荐文章</span></span><br><span class="line"><span class="attr">recommended_posts:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h5 id="在主题语言包中添加："><a href="#在主题语言包中添加：" class="headerlink" title="在主题语言包中添加："></a>在主题语言包中添加：</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文件位置：~/theme/next/languages/zh-CN.yml</span></span><br><span class="line"><span class="attr">copyright:</span></span><br><span class="line">    <span class="attr">author:</span> <span class="string">本文作者</span></span><br><span class="line">    <span class="attr">link:</span> <span class="string">本文链接</span></span><br><span class="line">    <span class="attr">license_title:</span> <span class="string">版权声明</span></span><br><span class="line">    <span class="attr">license_content:</span> <span class="string">"本博客所有文章除特别声明外，均采用 %s 许可协议。转载请注明出处！"</span></span><br><span class="line">    <span class="attr">recommended_posts:</span> <span class="string">推荐文章</span></span><br></pre></td></tr></table></figure>

<h5 id="主题配置文件中开启-post-body-后的自定义文件"><a href="#主题配置文件中开启-post-body-后的自定义文件" class="headerlink" title="主题配置文件中开启 post-body 后的自定义文件"></a>主题配置文件中开启 <code>post-body</code> 后的自定义文件</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="attr">postBodyEnd:</span> <span class="string">source/_data/post-body-end.njk</span></span><br></pre></td></tr></table></figure>

<h5 id="在-source-data-下新建文件-post-body-end-njk："><a href="#在-source-data-下新建文件-post-body-end-njk：" class="headerlink" title="在 ~/source/_data/ 下新建文件 post-body-end.njk："></a>在 <code>~/source/_data/</code> 下新建文件 <code>post-body-end.njk</code>：</h5><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;!-- 文件位置：~<span class="regexp">/source/</span>_data/post-body-end.swig --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% <span class="keyword">if</span> theme.recommended_posts.enabled and not is_index %&#125;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"post-body"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"note primary"</span>&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"recommended_posts"</span>&gt;</span><br><span class="line">      &#123;% <span class="keyword">set</span> recommended_posts = recommended_posts(post, site) %&#125;</span><br><span class="line">      &#123;% <span class="keyword">if</span> recommended_posts.length &gt; <span class="number">0</span> %&#125;</span><br><span class="line">        &lt;h4&gt;&#123;&#123; __(<span class="string">'推荐文章'</span>) &#125;&#125;&lt;<span class="regexp">/h4&gt;</span></span><br><span class="line"><span class="regexp">        &lt;ul&gt;</span></span><br><span class="line"><span class="regexp">          &#123;% for link in recommended_posts  %&#125;</span></span><br><span class="line"><span class="regexp">            &lt;li&gt;&lt;a href="&#123;&#123; link.permalink &#125;&#125;"&gt;&#123;&#123; link.title &#125;&#125;&lt;/</span>a&gt;&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">          &#123;% endfor %&#125;</span></span><br><span class="line"><span class="regexp">        &lt;/u</span>l&gt;</span><br><span class="line">      &#123;% endif %&#125; </span><br><span class="line">    &lt;<span class="regexp">/div&gt; </span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="添加结束标语"><a href="#添加结束标语" class="headerlink" title="添加结束标语"></a>添加结束标语</h4><h5 id="同样需要在-post-body-end-swig-文件中添加内容，开启自定义文件的功能参考上文。"><a href="#同样需要在-post-body-end-swig-文件中添加内容，开启自定义文件的功能参考上文。" class="headerlink" title="同样需要在 post-body-end.swig 文件中添加内容，开启自定义文件的功能参考上文。"></a>同样需要在 <code>post-body-end.swig</code> 文件中添加内容，开启自定义文件的功能参考<a href="https://guanqr.com/tech/website/hexo-theme-next-customization/#文末添加相关文章" target="_blank" rel="noopener">上文</a>。</h5><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"end-slogan"</span> <span class="attr">style</span>=<span class="string">"text-align:center;font-size:13px;letter-spacing:10px;user-select:none;color:#bbb;"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span>本文结束啦<span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-star"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>感谢您阅读<span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="在博客根目录的-config-yml-添加："><a href="#在博客根目录的-config-yml-添加：" class="headerlink" title="在博客根目录的 _config.yml 添加："></a>在博客根目录的 <code>_config.yml</code> 添加：</h5><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 文章末尾添加「本文结束」标记</span></span><br><span class="line"><span class="attr">passage_end_tag:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>





<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2>]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GitPages</tag>
        <tag>个人博客</tag>
      </tags>
  </entry>
</search>
